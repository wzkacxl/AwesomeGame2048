@import "lib";

$field-width: 500px;
$grid-spacing: 15px;
$grid-row-cells: 4;
$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1) ) / $grid-row-cells;
$tile-border-radius: 3px;

$text-color: #776E65;
$bright-text-color: #f9f6f2;

$tile-color:#eee4da;
$tile-gold-color: #edc22e;
$tile-gold-glow-color:lighten($tile-gold-color,15%);

$game-container-margin-top: 40px;
$game-container-background: #bbada0;

$transition-speed: 100ms;
*{
	margin: 0;
	padding: 0;
}
html,body {
	margin: 15px 0;
	padding: 0;

	background:#faf8ef;
	color:$text-color;
	font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
	font-size: 18px;
}

@mixin button {
	display: inline-block;
  	background: darken($game-container-background, 20%);
  	padding: 0px 20px;
  	text-decoration: none;
  	color: $bright-text-color;
  	height: 40px;
  	line-height: 42px;
  	@include radius($tile-border-radius);
  	cursor: pointer;
}
.container{
	width: $field-width;
	margin: 0 auto;
}


.header{
	@include clearfix;
}

h1.title{
	font-size: 80px;
	font-weight:bold;
	margin:0;
	display:block;
	float:left;
}

@include keyframes(move-up) {
  0% {
    top: 25px;
    opacity: 1;
  }

  100% {
    top: -50px;
    opacity: 0;
  }
}
.score{
	//float: right;
	text-align: right;
}

.score-container, .best-container{
	$height: 25px;

	display: inline-block;
	position: relative;
	height: $height;
	font-size:$height;
	line-height: 2 * $height;
	font-weight: bold;
	border-radius: 3px;
	padding: 15px 25px;

	text-align: center;
	color:#fff;
	background: $game-container-background;
	
	&:before{
		position: absolute;
		width: 100%;
		top: 8px;
		left: 0;
		font-size: 13px;
		line-height: 13px;
		text-align: center;
		color: $tile-color;

	}

	.score-addition{
		position: absolute;
	    right: 30px;
	    color: red;
	    font-size: $height;
	    line-height: $height;
	    font-weight: bold;
	    color: rgba($text-color, .9);
	    z-index: 100;
	    @include animation(move-up 600ms ease-in);
	    @include animation-fill-mode(both);
	}
}

.score-container:before {
  content: "SCORE";
}

.best-container:before {
  content: "BEST"
}

.btn-restart{
	@include button;
	float:right;
	display:block;
	@include sizing(border-box);
	padding: 0 20px;
	margin-top: 5px;
}

//game field
@mixin game-field{
	.game-container{
		position: relative;

		margin-top: 5px;
		padding:$grid-spacing;

		background: $game-container-background;
		
		width: $field-width;
		height: $field-width;

		@include radius($tile-border-radius * 2);
		@include sizing(border-box);

		.game-message {
			display: none;
			position: absolute;
			top: 0;
      		right: 0;
      		bottom: 0;
      		left: 0;
      		background: rgba($tile-color, 0.5);
      		z-index: 99;

      		text-align:center;

      		//@include animation(fade-in 800ms ease $transition-speed * 12);
      		//@include animation-fill-mode(both);

      		p {
      			font-size: 60px;
      			font-weight: bold;
      			height: 60px;
      			line-height: 60px;
      			margin-top: 200px;
      			margin-bottom: 30px;
      		}


      		a{
      			@include button;
      		}

      		&.game-over{
      			display: block;
      		}
     		
		}
	}

	.grid-container {
		position: absolute;
		z-index: 1;
	}

	.grid-row{
		margin-bottom: $grid-spacing;

		&:last-child {
			margin-bottom: 0;
		}

		@include clearfix;

	}

	.grid-cell {
		width: $tile-size;
		height: $tile-size;
		margin-right: $grid-spacing;
		float: left;

		@include radius($tile-border-radius);

		background: rgba($tile-color, 0.3);

		&:last-child{
			margin-right: 0;
		}
	}

	.tile-container {
	  position: absolute;
	  z-index: 2;
	}


	.tile {
		&, .tile-inner {
			width: ceil($tile-size);
			height: ceil($tile-size);
			line-height: ceil($tile-size);
		}
		//tile position
		@for $x from 1 through $grid-row-cells {
			@for $y from 1 through $grid-row-cells {
				&.tile-position-#{$x}-#{$y} {
					$xPos: floor(($tile-size + $grid-spacing)*($x - 1));
					$yPos: floor(($tile-size + $grid-spacing)*($y - 1));
					@include transform(translate($xPos, $yPos));
				}
			}
		}

	}
}

@include game-field;

.tile {
	position: absolute;

	@include transition($transition-speed ease-in-out);

	.tile-inner {
		@include radius($tile-border-radius);

		background: $tile-color;
		text-align: center;
		font-weight: bold;
		z-index:3;

		font-size: 55px;
	}

    $base: 2;
    $exponent: 1;
    $limit: 11;

    //background,color
    $special-colors: false false, // 2
                     false false, // 4
                     #f78e48 true, // 8
                     #fc5e2e true, // 16
                     #ff3333 true, // 32
                     #ff0000 true, // 64
                     false true, // 128
                     false true, // 256
                     false true, // 512
                     false true, // 1024
                     false true; // 2048

    //
    @while $exponent <= $limit{
    	$power: pow($base, $exponent);

    	&.tile-#{$power} .tile-inner{
    		//background color
    		$gold-percent: ($exponent - 1) * 10;
    		$mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

    		$nth-color: nth($special-colors, $exponent);

    		$special-background: nth($nth-color, 1);
    		$bright-color: nth($nth-color, 2);

    		@if $special-background {
    			$mixed-background: mix($special-background, $mixed-background,55%);
    		}


    		@if $bright-color{
    			color: $bright-text-color;
    		}

    		background: $mixed-background;

    		$glow-opacity: max($exponent - 4 , 0) / 7;

    		@if not $special-background {
    			box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
                    inset 0 0 0 1px rgba(white, $glow-opacity / 3);
    		}

    		@if $power >= 100 and $power <= 1000 {
    			font-size: 45px;
    		}@else if $power > 1000{
    			font-size: 35px;
    		}
    	}
    	$exponent: $exponent + 1;
    }

    &.tile-super .tile-inner {
    	color: $bright-text-color;
    	background: mix(#333, $tile-gold-color,95%);

    	font-size:30px;
    }                 
}

@include keyframes(appear){
	0% {
		opacity: 0;
		@include transform(scale(0));
	}

	100% {
		opacity: 1;
		@include transform(scale(1));
	}
}

.tile-new .tile-inner {
	@include animation(appear 200ms ease 100ms);
	@include animation-fill-mode(backwards);
}

@include keyframes(pop){
	0%{
		@include transform(scale(0));
	}

	50%{
		@include transform(scale(1.2));
	}

	100%{
		@include transform(scale(1));
	}
}

.tile-merged .tile-inner{
	z-index: 20;
	@include animation(pop 200ms ease 100ms);
	@include animation-fill-mode(backwards);
}